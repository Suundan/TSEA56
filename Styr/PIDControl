/*
 * PIDcontrol.c
 *
 * Created: 4/13/2016 1:11:05 PM
 *  Author: freol454
 */ 


#include <avr/io.h>
#include <avr/delay.h>


uint16_t error = 0x0; //the offset to be calculated
uint16_t pre_sensor = 0x0; //previous sensor_in

//variable below is input from sensors
uint16_t sensor_in;
uint8_t sensor_in0;
uint8_t sensor_in1;

//variables below represents the constants for P, I and D resp. (NEEDS TUNING AS HELL)
uint16_t k_p = 0x8;
uint16_t p_term;

uint16_t k_i = 0x1;
uint16_t i_term;

uint16_t k_d = 0x1;
uint16_t d_term;

uint16_t sum_error;
uint16_t scaling_factor = 0x100;
uint16_t ref_value = 0x42E; //1070 in hex

//current speed values to be adjusted
uint16_t speed_left;
uint16_t speed_right;

//variables for maximum values (if needed)
uint16_t inMin;
uint16_t inMax;

int main(void)
{
    while(1)
    {
		//Update sensor values
		pre_sensor = sensor_in;
	    sensor_in = sensor_in0 + (sensor_in1 << 8);
        
		//far to the right
		if (sensor_in > ref_value){
			
			//how far to the right
			error = sensor_in - ref_value; 
			//calc the p_term
			p_term = error / k_p;
			
			//TURN LEFT A LITTLE BIT
			//MAX SPEED = 0x3FF
			
		//else if far to the left:
		} else {
			
			//how far to the left
			error = ref_value - sensor_in;
			
			//calc the p_term
			p_term = error / k_p;
			
			//TURN RIGHT A LITTLE BIT
			//MAX SPEED = 0x3FF
			
			OCR1B = speed_right - p_term;
			OCR1A = speed_left + p_term;
			
			
		}
			
    }
}
